# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI (Reservation)

on:
  push:
    branches: [ "**" ]
    paths:
      - 'reservation/**'

jobs:
  build-reservation-service:
    name: Build reservation api service
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./reservation

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: ./mvnw verify

  build-and-push-docker-image:  # New job for deployment
    name: Build and Publish Docker Image (on main branch with tag)
    needs: build-reservation-service  # This job depends on successful build
    runs-on: ubuntu-latest  # Added missing `runs-on` property
    if: github.ref == 'refs/heads/main'  # Only run on main branch pushes
    env:  # Define environment variables here (optional)
      IMAGE_TAG: "v0.1.0-alpha"
    steps:
    - uses: actions/checkout@v3
    - name: Extract Tag (if applicable)
      run: |
        if [[ ${{ github.ref }} =~ refs\/tags\/(.+) ]]; then
          echo "IMAGE_TAG=${{1}}" >> $GITHUB_ENV  # Set environment variable using Env Files
        fi
    - name: Build and Push Docker Image (with tag)
      working-directory: ./reservation
      if: env.IMAGE_TAG != ''
      run: |
        ./mvnw clean package jib:dockerBuild -DskipTests
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker push ${{ secrets.DOCKER_USERNAME }}/reservation:${{ env.IMAGE_TAG }}
