# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI (Researvation Service Release)

on:
  release:
    types: [published]

jobs:
  build-reservation-service:
    name: Build reservation service
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven (if compatible JDK found)
      run: ./mvnw verify

    - name: Extract tag name
      id: vars
      run: |
        echo "tag_name=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
    - name: Build and Push Docker Image (with tag)
      env:
        IMAGE_TAG: ${{ steps.vars.outputs.tag_name }}
      if: ${{ env.IMAGE_TAG != '' }}  # Only build and push if a tag is present
      run: |
        ./mvnw clean package jib:dockerBuild -DskipTests -Djib.to.tags=${{ env.IMAGE_TAG }}
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker push ${{ secrets.DOCKER_USERNAME }}/reservation-service:${{ env.IMAGE_TAG }}
